{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

() recv_internal() {
}

;; From telegram chat (get length of a tuple)
int tlen(tuple t) asm "TLEN"; 

;; From telegram chat (get element from a tuple at position) cell -> tuple
tuple tuple_at_index(tuple t, int index) asm "INDEXVAR";

;; From telegram chat (get element from a tuple at position) cell -> int
int value_at_index(tuple t, int index) asm "INDEXVAR";

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id 
{
  var matrixC = empty_tuple();
  
  var mC_x_lenth = tlen(tuple_at_index(matrixB, 0));
  var mA_y_lenth = tlen(tuple_at_index(matrixA, 0));
  (var y, var x, var t, var c) = (0, 0, 0, 0); 
 
  repeat(tlen(matrixA))
  {
    var rowC = empty_tuple();
    
    c = 0;
    repeat (mC_x_lenth)
    {
      x = 0;
      t = 0;
      repeat(mA_y_lenth)
      {
        t += value_at_index(tuple_at_index(matrixA, y), x) * value_at_index(tuple_at_index(matrixB, x), c);
        x += 1;
      }

      rowC~tpush(t);
      c += 1;
    }

    matrixC~tpush(rowC);
    y += 1;
  }

  return matrixC;
}
