() recv_internal()
{
}

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id
{
  if (k == 0){
    return empty_tuple();
  }
  
  var previous = 0;
  var current = 1;

  repeat (n){
    (previous, current) = (current, previous + current);
  }

  var list = empty_tuple();
  while (n < 0){
    n += 1;
    list~tpush(previous);
  }
  
  list~tpush(previous);
  repeat (k - 1){
    list~tpush(current);
    (previous, current) = (current, previous + current);
  }

  return list;
}