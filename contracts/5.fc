() recv_internal()
{
}

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id
{
  if (k == 0){
    return empty_tuple();
  }
  else
  {
    var previous = 0;
    var current = 1;
    
    repeat (n - 2){
      (previous, current) = (current, previous + current);
    }
    
    var list = empty_tuple();
    repeat (2 - n){
      list~tpush(n);
      n += 1;
      k -= 1;
    }

    repeat (k){
      (previous, current) = (current, previous + current);
      list~tpush(current);
    }

    return list;
  }
}