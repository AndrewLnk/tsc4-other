() recv_internal() 
{
}

int tlen(tuple t) asm "TLEN";

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id 
{
  if (k == 0)
  {
    return empty_tuple();
  }
  else
  {
    var previous = 0;
    var current = 1;
    var list = empty_tuple();

    repeat (n - 1) { (previous, current) = (current, previous + current); }
    if (n <= 0) { list~tpush(previous); }

    list~tpush(current);
    repeat (k - list.tlen())
    {
      (previous, current) = (current, previous + current);
      list~tpush(current);
    }

    return list;
  }
}
