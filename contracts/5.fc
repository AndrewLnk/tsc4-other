() recv_internal()
{
}

int tlen(tuple t) asm "TLEN";

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id
{
  if (k == 0){ return empty_tuple(); }

  var previous = 0;
  var current = 1;
  var list = empty_tuple();

  repeat (n - 1) { (previous, current) = (current, previous + current); }
  
  if (n <= 0) 
  { 
    list~tpush(previous);
    list~tpush(current);
    repeat (k - 2)
    {
      (previous, current) = (current, previous + current);
      list~tpush(current);
    }

    return list;
  }
  else
  {
    list~tpush(current);
    repeat (k - 1)
    {
      (previous, current) = (current, previous + current);
      list~tpush(current);
    }

    return list;
  }
}