() recv_internal()
{
}

forall X -> (tuple) to_tuple (X x) asm "NOP";

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id
{
  if (k == 0)
  {
    return empty_tuple();
  }
  else
  {
    (var p, var c) = (0, 1);
    
    repeat (n - 1)
    {
      (p, c) = (c, p + c);
    }
    
    if (n <= 0)
    {
      var list = to_tuple([p, c]);
      repeat (k - 2)
      {
        (p, c) = (c, p + c);
        list~tpush(c);
      }

      return list;
    }
    else
    {
      var list = to_tuple([c]);
      repeat (k - 1)
      {
        (p, c) = (c, p + c);
        list~tpush(c);
      }

      return list;
    }
  }
}