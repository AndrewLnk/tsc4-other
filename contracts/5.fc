() recv_internal() 
{
}

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id 
{
  if (k == 0)
  {
    return empty_tuple();
  }

  n -= 2;
  var previous = 0;
  var current = 1;

  repeat (n) 
  {
    var tmp = previous + current;
    previous = current;
    current = tmp;
  }
  
  var list = empty_tuple();
  repeat (0 - n)
  {
    n += 1;
    k -= 1;
    list~tpush(n + 1);
  }

  repeat (k)
  {
    var tmp = previous + current;
    previous = current;
    current = tmp;

    list~tpush(current);
  }

  return list;
}
